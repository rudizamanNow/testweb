class c{mediaQueries;callbacks;constructor(){this.mediaQueries=new Map,this.callbacks=new Map}getBreakpointValue(e){const t=window.MQ_SCREENS[e];if(!t)throw new Error(`Breakpoint "${e}" not found in Tailwind config. Available breakpoints: ${Object.keys(window.MQ_SCREENS).join(", ")}`);return t}getNextBreakpointValue(e){const t=Object.entries(window.MQ_SCREENS),a=t.findIndex(([i])=>i===e);return a===-1||a===t.length-1?null:t[a+1][1]}createMediaQuery(e){if(e.exact){const t=this.getBreakpointValue(e.exact),a=this.getNextBreakpointValue(e.exact);return a?`(min-width: ${t}) and (max-width: calc(${a} - 1px))`:`(min-width: ${t})`}if(e.only)return e.only.map(t=>`(min-width: ${this.getBreakpointValue(t)})`).join(", ");if(e.between){const[t,a]=e.between;return`(min-width: ${this.getBreakpointValue(t)}) and (max-width: calc(${this.getBreakpointValue(a)} - 1px))`}if(e.from)return`(min-width: ${this.getBreakpointValue(e.from)})`;if(e.until)return`(max-width: calc(${this.getBreakpointValue(e.until)} - 1px))`;throw new Error("Invalid breakpoint condition")}on({when:e,callback:t}){const a=this.createMediaQuery(e),i=window.matchMedia(a),r=n=>{t(n.matches)};return this.mediaQueries.set(a,i),this.callbacks.set(a,t),t(i.matches),i.addEventListener("change",r),()=>{i.removeEventListener("change",r),this.mediaQueries.delete(a),this.callbacks.delete(a)}}matches(e){const t=this.createMediaQuery(e);return window.matchMedia(t).matches}cleanup(){this.mediaQueries.forEach((e,t)=>{const a=this.callbacks.get(t);a&&e.removeEventListener("change",a)}),this.mediaQueries.clear(),this.callbacks.clear()}}export{c as M};
