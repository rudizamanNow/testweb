"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6959],{26959:function(t,o,s){s.r(o),s.d(o,{default:function(){return e}});class e{constructor(t){this.options={},this.buildThresholdList=()=>{const t=[];for(let o=1;o<=100;o++){const s=o/100;t.push(s)}return t.push(0),t},this.getColorsFromRGB=t=>{const[o,s,e]=t.replace("rgb(","").replace(")","").split(",").map((t=>Number(t)));return{r:o,g:s,b:e}},this.colorInterpolate=(t,o,s)=>{const e=this.getColorsFromRGB(t),r=this.getColorsFromRGB(o),i=t=>Math.round(e[t]*(1-s)+r[t]*s);return{r:i("r"),g:i("g"),b:i("b")}},this.populateFloatingSections=()=>{this.floatingSections.forEach((t=>{const o=t.querySelector(".floating__color-change"),s=o?.dataset.floatingColorFrom,e=o?.dataset.floatingColorTo;if(s&&e){const r=new IntersectionObserver((t=>{t.forEach((t=>{const r=this.colorInterpolate(s,e,t.intersectionRatio);o.style.color=`rgb(${r.r}, ${r.g}, ${r.b})`}))}),this.options),i=t.querySelector(".floating__color-change-trigger");i&&r.observe(i)}}))},this.floatingSections=t,this.floatingSections.length&&(this.options={threshold:this.buildThresholdList()},this.populateFloatingSections())}}}}]);